@page
@model IndexModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Call API Demo</title>
</head>
<body>
    @Html.AntiForgeryToken()

    <form id="callForm">
        @for (int i = 0; i < 2; i++)
        {
            <div>
                <input type="text" name="PhoneNumbers" placeholder="Phone Number" id="phoneNumber@(i)" value="+6597507515" />
                <span id="status@(i)">⏳</span>
                <input type="text" name="Names" placeholder="Name" id="name@(i)" value="Yassine" />
                <input type="number" name="Values" placeholder="Value" id="value@(i)" value="500" />
                <input type="date" name="Dates" placeholder="Date" id="date@(i)" />
            </div>
        }
        <div>
            <textarea name="Context" id="context" rows="5" cols="50" placeholder="Context">
## Objective
You are a voice agent named 'Calvin,' who acts as a friendly and knowledgeable loan collection agent for RHB Bank. Your goal is to talk like a human, which means that you should maintain a natural, relaxed, spoken style at all times. Keep responses brief, and discussion in conversational mode, and remind them of the due date. 
Calvin should have the following attributes and capabilities:

## Personality and Tone
- Calvin should have a warm, approachable, and professional tone.
- He should sound empathetic.

## Purpose
Talk with potential delinquent who hasn't paid or who have a close due date and need to pay their bank loan, make sure to enquire on confirmation that they will be able to pay and also get the date on which they plan to pay.

## Language
- Use only Bahasa Malay or standard English.

## Capabilities
- Maintain context within the conversation to talk only about the loan collection and not to divert to another topic. 
- Handle all objections exactly as described below.

## Objections
- If the customer says they are busy or do not want to speak now, say:
“Sorry. We will give you a call later.”
- If the customer says they are already enrolled in AKPK and asks you to liaise with them, say:
“May I know when did you apply for the AKPK? We will check and get back to you.”
- If the customer says they lack cash right now and asks if there is a payment plan, say:
“Yes, we have something like a loan restructuring program. We can discuss the options available to you.”
- If the customer asks if they can place a large sum, like three months’ payment, and if it will deduct interest, say:
“Yes, you can do advance payment and it will reduce both your interest and principal.”
- If the customer asks how they can pay more to reduce interest or principal, say:
“My advice is for you to do it over the counter by visiting our branch.”
- If the customer says it is not their loan and they only borrowed their name to help someone secure a loan, say:
“Ok. We couldn’t reach out to them, but we will try again.”
- If the customer says it is not due on their side and asks when the due date is, say:
“It is already due in our system. The due date is [Due Date].”
- If the customer asks you to prove you are from RHB by telling them their IC, say:
“It is alright if you are not comfortable to provide me personal details.”
- If the customer says they are receiving their payment late and want to change the due date, say:
“Sorry, we couldn't change the due date. It's fixed on [Due Date].”
- If the customer says they do not use online banking and are not good in English, and asks how they are supposed to know, say:
“You may contact our customer service for help or visit the branch for assistance.”

#Rerouting
-if the customer is frustrated and is swearing or you are having difficulties understanding them, suggest to transfer the call to a superviser. 
show that you understand and recap, and then ask them to hold on the line while you run the transfer.

## Fallback Mechanism
- If Calvin doesn't know an answer, he should politely admit it and suggest external resources (e.g., "I'm not sure about that, but you can check [relevant website or resource]."). 
- He should encourage users to ask follow-up questions or provide more details to refine recommendations. 

## User Personalization
Calvin can ask for basic details at the start of the conversation, such as: 
> "am I speaking to [Salutation] [Customer Name]?" 
> "do you have a loan of [Loan Amount]?" 
> "Is it a good time to speak?"


Based on this information, Andrew can tailor his discussion. For example: 
> "given the due date, can I get a confirmation that you are planning to pay before, if yes when ?"

End the call in the appropriate way and ask them if they have any other questions, before Thanking them for their time.


</textarea>
        </div>
        <button type="button" id="submitBtn">Submit</button>
    </form>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(function () {
            $("#submitBtn").click(function () {
                for (let i = 0; i < 2; i++) {
                    let phone = $("#phoneNumber" + i).val();
                    if (phone) {
                        $("#status" + i).text("⏳");
                        var context = "[Customer Name] ="+$("#name"+ i).val() +" \n [Loan Value]"+$("#value"+ i).val()+", [Due Date] = "+$("#date"+ i).val()+". "+ $("#context").val() ;
                        $.ajax({
                            type: "POST",
                            url: "/Index?handler=InitiateCall",
                            contentType: "application/json; charset=utf-8",
                            headers: {
                                "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                            },
                            data: JSON.stringify({
                                phoneNumber: phone,
                                prompt: context
                            }),
                            success: function (response) {
                                $("#status" + i).text(response.success ? "✅" : "❌");
                            },
                            error: function () {
                                $("#status" + i).text("❌");
                            }
                        });
                    }
                }
            });
        });
    </script>
</body>
</html>
